{
  "project": "Medica Scientifica Optimizer",
  "features": [],
  "agents": {
    "agent-1759678981": {
      "lastHeartbeat": "2025-10-05T15:43:02.210Z",
      "status": "active",
      "reinitialized": "2025-10-05T15:43:02.210Z",
      "sessionId": "ee4f8dafc74d78dc",
      "previousSessions": []
    }
  },
  "metadata": {
    "version": "1.0.0",
    "created": "2025-10-01T21:47:47.934Z",
    "updated": "2025-10-05T03:03:32.539Z",
    "total_features": 0,
    "approval_history": [],
    "initialization_stats": {
      "total_initializations": 0,
      "total_reinitializations": 5,
      "current_day": "2025-10-05",
      "time_buckets": {
        "19:00-23:59": {
          "init": 0,
          "reinit": 0
        },
        "00:00-04:59": {
          "init": 0,
          "reinit": 0
        },
        "05:00-09:59": {
          "init": 0,
          "reinit": 0
        },
        "10:00-14:59": {
          "init": 0,
          "reinit": 1
        },
        "15:00-19:59": {
          "init": 0,
          "reinit": 0
        }
      },
      "daily_history": [
        {
          "date": "2025-10-02",
          "total_init": 0,
          "total_reinit": 1,
          "buckets": {
            "16:00-20:59": {
              "init": 0,
              "reinit": 0
            },
            "21:00-01:59": {
              "init": 0,
              "reinit": 1
            },
            "02:00-06:59": {
              "init": 0,
              "reinit": 0
            },
            "07:00-11:59": {
              "init": 0,
              "reinit": 0
            },
            "12:00-16:59": {
              "init": 0,
              "reinit": 0
            }
          }
        },
        {
          "date": "2025-10-03",
          "total_init": 0,
          "total_reinit": 1,
          "buckets": {
            "17:00-21:59": {
              "init": 0,
              "reinit": 1
            },
            "22:00-02:59": {
              "init": 0,
              "reinit": 0
            },
            "03:00-07:59": {
              "init": 0,
              "reinit": 0
            },
            "08:00-12:59": {
              "init": 0,
              "reinit": 0
            },
            "13:00-17:59": {
              "init": 0,
              "reinit": 0
            }
          }
        },
        {
          "date": "2025-10-04",
          "total_init": 0,
          "total_reinit": 1,
          "buckets": {
            "17:00-21:59": {
              "init": 0,
              "reinit": 1
            },
            "22:00-02:59": {
              "init": 0,
              "reinit": 0
            },
            "03:00-07:59": {
              "init": 0,
              "reinit": 0
            },
            "08:00-12:59": {
              "init": 0,
              "reinit": 0
            },
            "13:00-17:59": {
              "init": 0,
              "reinit": 0
            }
          }
        }
      ],
      "last_reset": "2025-10-05T15:43:02.211Z",
      "last_updated": "2025-10-05T15:43:02.211Z"
    }
  },
  "workflow_config": {
    "require_approval": true,
    "auto_reject_timeout_hours": 168,
    "allowed_statuses": [
      "suggested",
      "approved",
      "rejected",
      "implemented"
    ],
    "required_fields": [
      "title",
      "description",
      "business_value",
      "category"
    ]
  },
  "tasks": [
    {
      "id": "task_1759551458758_928f76abce97",
      "feature_id": null,
      "title": "Add inventory policy override actions to ActionBuilder",
      "description": "Implement UI actions for overriding Reorder Point, Order Quantity, and Batch Size in the ActionBuilder component. Users should be able to set these values manually as strategy actions.",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-04T04:17:38.758Z",
      "updated_at": "2025-10-04T04:20:56.919Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-04T04:20:56.919Z"
    },
    {
      "id": "task_1759551459929_0f896bf5e278",
      "feature_id": null,
      "title": "Create policy values visualization over time",
      "description": "Add graphs showing Reorder Point, Order Quantity, and Batch Size values over time according to the strategy. Display these before simulation runs.",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-04T04:17:39.929Z",
      "updated_at": "2025-10-04T04:23:16.966Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-04T04:23:16.966Z"
    },
    {
      "id": "task_1759551461322_ae07470fb81b",
      "feature_id": null,
      "title": "Create dashboard for all user inputs over time",
      "description": "Implement comprehensive dashboard showing all user input values (prices, allocations, policies) over time before strategy implementation. Include interactive graphs.",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-04T04:17:41.322Z",
      "updated_at": "2025-10-04T04:23:18.215Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-04T04:23:18.215Z"
    },
    {
      "id": "task_1759551462554_a611d3691e90",
      "feature_id": null,
      "title": "Enable continuous strategy editing and simulation reruns",
      "description": "Allow users to edit strategy, run simulation, see results, continue editing, and rerun - all in an iterative workflow without page reloads.",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-04T04:17:42.554Z",
      "updated_at": "2025-10-04T04:23:19.371Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-04T04:23:19.371Z"
    },
    {
      "id": "task_1759620906664_66b5e92f5818",
      "feature_id": null,
      "title": "Enhance genetic optimizer with one-time actions and automatic loan management",
      "description": "Improve the genetic optimizer to test more diverse strategies:\n\n1. **Increase one-time action frequency**:\n   - Boost HIRE_ROOKIE probability from 20% to 40-50%\n   - Boost BUY_MACHINE probability from 15% to 30-40%\n   - Add FIRE_EMPLOYEE and SELL_MACHINE actions\n   - Test combinations of multiple one-time actions\n\n2. **Add automatic loan management**:\n   - Before each action, calculate if it would violate minimum cash threshold\n   - If yes, automatically insert TAKE_LOAN action before it\n   - Calculate exact loan amount needed to maintain threshold\n   - Ensure loans are only taken when necessary\n\n3. **Smarter action generation**:\n   - Remove overly restrictive conditions (queue > 5, NPV > 0)\n   - Test more aggressive strategies (early hiring, early machine purchases)\n   - Generate multi-action sequences (hire workers + buy machines + adjust prices)\n\nAcceptance Criteria:\n- Optimizer logs show HIRE_ROOKIE, BUY_MACHINE actions in at least 30% of candidates\n- TAKE_LOAN actions appear automatically before cash-negative actions\n- No simulation failures due to insufficient cash\n- Action diversity increases (currently only seeing 5 policy actions)",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-04T23:35:06.664Z",
      "updated_at": "2025-10-05T00:03:17.567Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-04T23:40:25.328Z"
    },
    {
      "id": "task_1759626031988_f39f14c8a3d0",
      "feature_id": null,
      "title": "Address high-severity security vulnerabilities in xlsx package",
      "description": "The xlsx package has 1 high severity vulnerability:\n- Prototype Pollution (GHSA-4r6h-8v6p-xvw6)\n- Regular Expression Denial of Service ReDoS (GHSA-5pgg-2g8v-p4x9)\n\nNo fix available for current xlsx package.\n\nOptions:\n1. Switch to alternative Excel library (e.g., exceljs, xlsx-populate)\n2. Accept risk for internal development tool\n3. Remove Excel export feature\n\nRecommendation: Evaluate exceljs as safer alternative with similar API.",
      "type": "error",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-05T01:00:31.988Z",
      "updated_at": "2025-10-05T01:42:25.478Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-05T01:42:25.478Z"
    },
    {
      "id": "task_1759628161735_3a7ba407be6a",
      "feature_id": null,
      "title": "Fix standard product demand curve to reflect competitive market reality",
      "description": "The current demand curve (Q = 500 - 0.25*P) is too gentle for the \"very competitive\" market described in the business case.\n\n**Problem:** Users can charge $1,200 (6x market price) and still sell 200 units/day. This contradicts competitive market dynamics.\n\n**Business Case Evidence (Page 2):**\n- \"The market for standard products was dominated by purchasing departments of large health institutions, and it was very competitive\"\n- \"Executives... had kept prices below the market average\"\n- In competitive markets, pricing above market = near-zero sales\n\n**Solution:** Implement steeper demand curve:\n- Intercept: 1500 (up from 500)\n- Slope: -5.0 (down from -0.25)\n- Formula: Q = 1500 - 5.0 * P\n\n**Results with new curve:**\n- $200 (below market): 500 units/day (high demand)\n- $250 (near market): 250 units/day (moderate)\n- $300+ (above market): 0 units/day (competitive rejection)\n- $800: 0 units/day\n- $1200: 0 units/day\n\n**Files to modify:**\n- src/simulation/constants.ts (lines 185-186)\n- Update standardDemandIntercept and standardDemandSlope\n- Add comment explaining competitive market dynamics\n\n**Acceptance Criteria:**\n- Pricing significantly above $300 results in near-zero demand\n- Previous optimizer results ($1200 price) would now fail\n- Realistic competitive behavior enforced\n- Students learn operations management, not price gouging",
      "type": "error",
      "priority": "urgent",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-05T01:36:01.735Z",
      "updated_at": "2025-10-05T01:37:26.916Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-05T01:37:26.916Z"
    },
    {
      "id": "task_1759631054002_980a6ffd930e",
      "feature_id": null,
      "title": "Add comprehensive dashboards to simulation results page",
      "description": "Transform simulation results page from showing just warnings to displaying comprehensive dashboards with all useful information including market metrics, financial data, competitive analysis, and performance indicators",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-05T02:24:14.002Z",
      "updated_at": "2025-10-05T02:27:38.384Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-05T02:27:38.384Z"
    },
    {
      "id": "task_1759631561573_fcebaeda0181",
      "feature_id": null,
      "title": "Add production line specificity to all strategy input labels",
      "description": "Comprehensively updated input labels across PolicyForm, DayActionSelector, and AdvancedOptimizer to explicitly indicate which production line (Standard Line, Custom Line, or Both Lines) each parameter applies to. Eliminates user confusion about parameter scope.",
      "type": "feature",
      "priority": "normal",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-05T02:32:41.573Z",
      "updated_at": "2025-10-05T02:38:09.485Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-05T02:32:50.216Z"
    },
    {
      "id": "task_1759632262320_37f0f1499d79",
      "feature_id": null,
      "title": "Create live factory process map visualization",
      "description": "Added comprehensive process map showing complete factory operation flow with live statistics from simulation results. Includes side-by-side Custom Line vs Standard Line comparison, bottleneck detection, processing times, and station-by-station flow visualization. Integrated as default first tab in ResultsDashboard.",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-05T02:44:22.320Z",
      "updated_at": "2025-10-05T02:44:32.280Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-05T02:44:32.280Z"
    },
    {
      "id": "task_1759632479962_5ff204333f64",
      "feature_id": null,
      "title": "Make process map always visible with historical data fallback",
      "description": "Update ProcessMap component to always display on simulation results page. When no simulation has been run, show historical data from previous runs. Ensure graceful handling when no historical data exists.",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-05T02:47:59.962Z",
      "updated_at": "2025-10-05T02:52:58.031Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-05T02:52:58.031Z"
    },
    {
      "id": "task_1759632481254_184c0578285f",
      "feature_id": null,
      "title": "Implement simulation results persistence with save/load/delete functionality",
      "description": "Create system to save simulation results to localStorage or database. Include metadata (timestamp, strategy name, key metrics). Implement UI to browse saved results, load them for viewing, and delete unwanted results. Add results library management interface.",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-05T02:48:01.254Z",
      "updated_at": "2025-10-05T02:52:59.272Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-05T02:52:59.272Z"
    },
    {
      "id": "task_1759632482513_7d4052397ff1",
      "feature_id": null,
      "title": "Integrate saved results viewer into ResultsDashboard",
      "description": "Add results selector dropdown or sidebar to ResultsDashboard. Allow switching between current simulation and saved historical results. Display selected result across all dashboard tabs including process map. Show metadata (date, strategy, performance) for each saved result.",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-05T02:48:02.513Z",
      "updated_at": "2025-10-05T02:53:00.743Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-05T02:53:00.743Z"
    },
    {
      "id": "task_1759633213889_a067d1b49948",
      "feature_id": null,
      "title": "Enhance process map with comprehensive bottleneck detection and statistics",
      "description": "Expand ProcessMap component to provide detailed bottleneck analysis:\n\n1. **Enhanced Visual Highlighting**:\n   - Color-coded severity levels (red=critical, yellow=warning, green=optimal)\n   - Pulsing animations or stronger visual cues for bottlenecks\n   - Side-by-side comparison highlighting differences\n\n2. **Comprehensive Bottleneck Statistics**:\n   - Average WIP levels over time with trends\n   - Percentage of time each station was bottlenecked\n   - Peak bottleneck days and severity scores\n   - Resource utilization percentages\n   - Queue times and processing delays\n\n3. **Problem Analysis Panel**:\n   - List of detected bottlenecks with severity ratings\n   - Root cause analysis (e.g., insufficient capacity, high demand)\n   - Impact metrics (units delayed, revenue lost)\n   - Recommended actions to resolve each bottleneck\n\n4. **Historical Trends**:\n   - Charts showing bottleneck evolution over simulation period\n   - Identify when bottlenecks started/ended\n   - Compare bottleneck severity across different days\n\nAcceptance Criteria:\n- Clear visual distinction between healthy and bottlenecked stations\n- Detailed statistics panel showing comprehensive metrics\n- Actionable recommendations for each identified bottleneck\n- Historical trend visualization for bottleneck patterns",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-05T03:00:13.889Z",
      "updated_at": "2025-10-05T03:03:32.539Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-05T03:03:32.539Z"
    }
  ],
  "completed_tasks": []
}
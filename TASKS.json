{
  "project": "Medica Scientifica Optimizer",
  "features": [],
  "agents": {},
  "metadata": {
    "version": "1.0.0",
    "created": "2025-10-01T21:47:47.934Z",
    "updated": "2025-10-04T23:36:43.682Z",
    "total_features": 0,
    "approval_history": [],
    "initialization_stats": {
      "total_initializations": 0,
      "total_reinitializations": 4,
      "current_day": "2025-10-04",
      "time_buckets": {
        "17:00-21:59": {
          "init": 0,
          "reinit": 1
        },
        "22:00-02:59": {
          "init": 0,
          "reinit": 0
        },
        "03:00-07:59": {
          "init": 0,
          "reinit": 0
        },
        "08:00-12:59": {
          "init": 0,
          "reinit": 0
        },
        "13:00-17:59": {
          "init": 0,
          "reinit": 0
        }
      },
      "daily_history": [
        {
          "date": "2025-10-02",
          "total_init": 0,
          "total_reinit": 1,
          "buckets": {
            "16:00-20:59": {
              "init": 0,
              "reinit": 0
            },
            "21:00-01:59": {
              "init": 0,
              "reinit": 1
            },
            "02:00-06:59": {
              "init": 0,
              "reinit": 0
            },
            "07:00-11:59": {
              "init": 0,
              "reinit": 0
            },
            "12:00-16:59": {
              "init": 0,
              "reinit": 0
            }
          }
        },
        {
          "date": "2025-10-03",
          "total_init": 0,
          "total_reinit": 1,
          "buckets": {
            "17:00-21:59": {
              "init": 0,
              "reinit": 1
            },
            "22:00-02:59": {
              "init": 0,
              "reinit": 0
            },
            "03:00-07:59": {
              "init": 0,
              "reinit": 0
            },
            "08:00-12:59": {
              "init": 0,
              "reinit": 0
            },
            "13:00-17:59": {
              "init": 0,
              "reinit": 0
            }
          }
        }
      ],
      "last_reset": "2025-10-04T01:21:32.121Z",
      "last_updated": "2025-10-04T01:21:32.121Z"
    }
  },
  "workflow_config": {
    "require_approval": true,
    "auto_reject_timeout_hours": 168,
    "allowed_statuses": [
      "suggested",
      "approved",
      "rejected",
      "implemented"
    ],
    "required_fields": [
      "title",
      "description",
      "business_value",
      "category"
    ]
  },
  "tasks": [
    {
      "id": "task_1759551458758_928f76abce97",
      "feature_id": null,
      "title": "Add inventory policy override actions to ActionBuilder",
      "description": "Implement UI actions for overriding Reorder Point, Order Quantity, and Batch Size in the ActionBuilder component. Users should be able to set these values manually as strategy actions.",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-04T04:17:38.758Z",
      "updated_at": "2025-10-04T04:20:56.919Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-04T04:20:56.919Z"
    },
    {
      "id": "task_1759551459929_0f896bf5e278",
      "feature_id": null,
      "title": "Create policy values visualization over time",
      "description": "Add graphs showing Reorder Point, Order Quantity, and Batch Size values over time according to the strategy. Display these before simulation runs.",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-04T04:17:39.929Z",
      "updated_at": "2025-10-04T04:23:16.966Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-04T04:23:16.966Z"
    },
    {
      "id": "task_1759551461322_ae07470fb81b",
      "feature_id": null,
      "title": "Create dashboard for all user inputs over time",
      "description": "Implement comprehensive dashboard showing all user input values (prices, allocations, policies) over time before strategy implementation. Include interactive graphs.",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-04T04:17:41.322Z",
      "updated_at": "2025-10-04T04:23:18.215Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-04T04:23:18.215Z"
    },
    {
      "id": "task_1759551462554_a611d3691e90",
      "feature_id": null,
      "title": "Enable continuous strategy editing and simulation reruns",
      "description": "Allow users to edit strategy, run simulation, see results, continue editing, and rerun - all in an iterative workflow without page reloads.",
      "type": "feature",
      "priority": "high",
      "status": "completed",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-04T04:17:42.554Z",
      "updated_at": "2025-10-04T04:23:19.371Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      },
      "progress_percentage": 100,
      "completed_at": "2025-10-04T04:23:19.371Z"
    },
    {
      "id": "task_1759620906664_66b5e92f5818",
      "feature_id": null,
      "title": "Enhance genetic optimizer with one-time actions and automatic loan management",
      "description": "Improve the genetic optimizer to test more diverse strategies:\n\n1. **Increase one-time action frequency**:\n   - Boost HIRE_ROOKIE probability from 20% to 40-50%\n   - Boost BUY_MACHINE probability from 15% to 30-40%\n   - Add FIRE_EMPLOYEE and SELL_MACHINE actions\n   - Test combinations of multiple one-time actions\n\n2. **Add automatic loan management**:\n   - Before each action, calculate if it would violate minimum cash threshold\n   - If yes, automatically insert TAKE_LOAN action before it\n   - Calculate exact loan amount needed to maintain threshold\n   - Ensure loans are only taken when necessary\n\n3. **Smarter action generation**:\n   - Remove overly restrictive conditions (queue > 5, NPV > 0)\n   - Test more aggressive strategies (early hiring, early machine purchases)\n   - Generate multi-action sequences (hire workers + buy machines + adjust prices)\n\nAcceptance Criteria:\n- Optimizer logs show HIRE_ROOKIE, BUY_MACHINE actions in at least 30% of candidates\n- TAKE_LOAN actions appear automatically before cash-negative actions\n- No simulation failures due to insufficient cash\n- Action diversity increases (currently only seeing 5 policy actions)",
      "type": "feature",
      "priority": "high",
      "status": "approved",
      "dependencies": [],
      "estimated_effort": 5,
      "required_capabilities": [
        "general"
      ],
      "created_at": "2025-10-04T23:35:06.664Z",
      "updated_at": "2025-10-04T23:36:43.682Z",
      "created_by": "manual_creation",
      "verificationGate": {
        "status": "pending",
        "requirements": [],
        "evidence": null,
        "verifiedAt": null,
        "verifiedBy": null
      },
      "metadata": {
        "auto_generated": false
      }
    }
  ],
  "completed_tasks": []
}